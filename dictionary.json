{
	"programmingLanguage": {
		"title": "язык программирования",
		"description": "формальный язык, предназначенный для записи компьютерных программ"
	},
	"typing": {
		"title": "типизация",
		"description": "принцип, описывающий то, как выбранный язык будет распознавать типы данных в кодификации"
	},
	"dataType": {
		"title": "тип данных",
		"description": "класс данных, характеризуемый членами класса и операциями, которые могут быть к ним применены"
	},
	"weakTyping": {
		"title": "слабая типизация",
		"description": "Язык программирования разрешает выполнение выражений с любыми типами и самостоятельно выполняет неявные преобразование"
	},
	"strongTyping": {
		"title": "сильная типизация",
		"description": "Язык программирования не позволяет смешивать в выражениях различные типы и не выполнять автоматические неявные преобразования"
	},
	"dynamicTyping": {
		"title": "динамическая типизация",
		"description": "конечные типы переменных и функций устанавливаются во время выполнения программы"
	},
	"staticTyping": {
		"title": "статическая типизация",
		"description": "конечные типы переменных и функций устанавливаются на этапе компиляции программы"
	},
	"explicitTyping": {
		"title": "явная типизация",
		"description": "предполагает, что указание принадлежности языковых элементов к конкретному типу возлагается на разработчика"
	},
	"implicitTyping": {
		"title": "неявная типизация",
		"description": "при объявлении языковых элементов не требует от разработчика указания принадлежности к конкретному типу данных и возлагает определение типов на компилятор или интерпретатор"
	},
	"webBrowser": {
		"title": "веб-браузер",
		"description": "прикладное программное обеспечение для просмотра страниц, содержания веб-документов, компьютерных файлов и их каталогов; управления веб-приложениями; а также для решения других задач"
	},
	"javaScript": {
		"title": "JavaScript",
		"description": "мультипарадигменный язык программирования. Поддерживает объектно-ориентированный, императивный и функциональный стили. Является реализацией спецификации ECMAScript"
	},
	"typeScript": {
		"title": "TypeScript",
		"description": "cтрого типизированный язык программирования, основанный на JavaScript"
	},
	"staticProgramAnalysis": {
		"title": "Статический анализ кода",
		"description": "анализ программного обеспечения, производимый (в отличие от динамического анализа) без реального выполнения исследуемых программ"
	},
	"flow": {
		"title": "Flow",
		"description": "статический анализатор кода и набор синтаксических конструкций, для прямого указания типа переменной"
	},
	"elm": {
		"title": "Elm",
		"description": "функциональный язык программирования для разработки веб-приложений, работающих в браузере"
	},
	"website": {
		"title": "веб-сайт",
		"description": "информационная единица в интернете, ресурс из веб-страниц (документов), которые объединены общей темой и связаны между друг с другом с помощью ссылок"
	},
	"pureScript": {
		"title": "PureScript",
		"description": "строго типизированный функциональный язык программирования, компиляция которого создает код JavaScript"
	},
	"reScript": {
		"title": "ReScript",
		"description": "язык программирования, основанный на системе строгих типов OCaml, который компилируется в эффективный и выразительный JavaScript"
	},
	"immutability": {
		"title": "Иммутабельность",
		"description": "принцип, который предполагает, что после создания данные или структура, которая их содержит, не могут быть изменены"
	},
	"compilation": {
		"title": "Компиляция",
		"description": "трансляция программы, составленной на исходном языке высокого уровня, в эквивалентную программу на низкоуровневом языке, близком машинному коду (абсолютный код, объектный модуль, иногда на язык ассемблера), выполняемая компилятором"
	},
	"refactoring": {
		"title": "Рефакторинг",
		"description": "процесс изменения внутренней структуры программы, не затрагивающий её внешнего поведения и имеющий целью облегчить понимание её работы"
	},
	"compiler": {
		"title": "Компилятор",
		"description": "программа, переводящая написанный на языке программирования текст в набор машинных кодов"
	},
	"interpreter": {
		"title": "Интерпретатор",
		"description": "программа, которая непосредственно выполняет инструкции, написанные на языке программирования или сценариев, не требуя, чтобы они ранее были скомпилированы в программу на машинном языке"
	},
	"interpretation": {
		"title": "Интерпретация",
		"description": "построчный анализ, обработка и выполнение исходного кода программы или запроса"
	},
	"transpilation": {
		"title": "Транспиляция",
		"description": "преобразование программы, написанной на одном языке программирования, в эквивалентный код другой версии этого языка или в другой язык программирования того же уровня абстракции"
	},
	"transpiler": {
		"title": "Транспайлер",
		"description": "тип транслятора, который принимает исходный код программы, написанной на языке программирования, в качестве входных данных и выдает эквивалентный исходный код на том же или другом языке программирования"
	},
	"ecmaScript": {
		"title": "ECMAScript",
		"description": "встраиваемый расширяемый не имеющий средств ввода-вывода язык программирования, используемый в качестве основы для построения других скриптовых языков"
	},
	"web": {
		"title": "веб (World Wide Web или всемирная паутина)",
		"description": "распределённая система, предоставляющая доступ к связанным между собой документам, расположенным на различных компьютерах, подключённых к сети Интернет"
	},
	"codeExecution": {
		"title": "Исполнение программного кода",
		"description": "процесс, в котором компьютер выполняет инструкции, заданные в программном коде"
	}
}